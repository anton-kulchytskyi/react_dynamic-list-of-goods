{"version":3,"sources":["api/goods.ts","components/GoodsList/GoodsList.tsx","components/LoadingError/LoadingError.tsx","App.tsx","index.tsx"],"names":["getAll","fetch","then","response","json","get5First","a","serverAnswer","sort","b","name","localeCompare","slice","getRed","filter","el","color","GoodsList","goods","className","map","good","style","id","LoadingError","App","state","goodsErrorLoading","loadFromServer","loadFun","setState","goodsFromServer","allGoods","fiveAscAlphabeticSortGoods","redGoods","this","type","onClick","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8SAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACIN,IADJ,cACjBO,EADiB,yBAGhBA,EAAaC,MAAK,SAACF,EAAGG,GAAJ,OAAUH,EAAEI,KAAKC,cAAcF,EAAEC,SAAOE,MAAM,EAAG,IAHnD,2CAAH,qDAMTC,EAAM,uCAAG,4BAAAP,EAAA,sEACON,IADP,cACdO,EADc,yBAGbA,EAAaO,QAAO,SAAAC,GAAE,MAAiB,QAAbA,EAAGC,UAHhB,2CAAH,qD,qBCDNC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,qBAAKC,UAAU,QAAf,SACE,oBAAIA,UAAU,cAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEEC,MAAO,CAAEN,MAAOK,EAAKL,OAFvB,SAIGK,EAAKX,MAHDW,EAAKE,YCfPC,G,MAAyB,kBACpC,mBAAGL,UAAU,QAAb,4CCaWM,EAAb,4MACEC,MAAQ,CACNR,MAAO,GACPS,mBAAmB,GAHvB,EAMEC,eANF,uCAMmB,WAAOC,GAAP,eAAAvB,EAAA,6DACf,EAAKwB,SAAS,CAAEH,mBAAmB,IADpB,kBAGiBE,IAHjB,OAGPE,EAHO,OAKb,EAAKD,SAAS,CAAEZ,MAAOa,IALV,gDAOb,EAAKD,SAAS,CAAEH,mBAAmB,IAPtB,yDANnB,wDAiBEK,SAAW,kBAAM,EAAKJ,eAAe5B,IAjBvC,EAmBEiC,2BAA6B,kBAAM,EAAKL,eAAevB,IAnBzD,EAqBE6B,SAAW,kBAAM,EAAKN,eAAef,IArBvC,4CAuBE,WACE,MAAqCsB,KAAKT,MAAlCR,EAAR,EAAQA,MAAOS,EAAf,EAAeA,kBAEf,OACE,sBAAKR,UAAU,MAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,wBACEA,UAAU,SACViB,KAAK,SACLC,QAASF,KAAKH,SAHhB,4BAOA,wBACEb,UAAU,SACViB,KAAK,SACLC,QAASF,KAAKF,2BAHhB,0BAOA,wBACEd,UAAU,SACViB,KAAK,SACLC,QAASF,KAAKD,SAHhB,+BAQDP,GAAqB,cAAC,EAAD,IACrBT,EAAMoB,OAAS,GAAK,cAAC,EAAD,CAAWpB,MAAOA,WApD/C,GAAyBqB,IAAMC,WCd/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c46b4f16.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = async () => {\n  const serverAnswer = await getAll();\n\n  return serverAnswer.sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5);\n};\n\nexport const getRed = async () => {\n  const serverAnswer = await getAll();\n\n  return serverAnswer.filter(el => el.color === 'red');\n};\n","import React from 'react';\nimport './GoodsList.scss';\n\ntype Good = {\n  id: number,\n  name: string,\n  color: string,\n};\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <div className=\"goods\">\n    <ul className=\"goods__list\">\n      {goods.map(good => (\n        <li\n          key={good.id}\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React from 'react';\nimport './LoadingError.scss';\n\nexport const LoadingError: React.FC = () => (\n  <p className=\"error\">\n    Cannot load data from server\n  </p>\n);\n","import React from 'react';\nimport { getAll, get5First, getRed } from './api/goods';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { LoadingError } from './components/LoadingError/LoadingError';\n\ninterface State {\n  goods: Good[],\n  goodsErrorLoading: boolean,\n}\n\ntype Good = {\n  id: number,\n  name: string,\n  color: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    goodsErrorLoading: false,\n  };\n\n  loadFromServer = async (loadFun: () => Promise<Good[]>) => {\n    this.setState({ goodsErrorLoading: false });\n    try {\n      const goodsFromServer = await loadFun();\n\n      this.setState({ goods: goodsFromServer });\n    } catch (error) {\n      this.setState({ goodsErrorLoading: true });\n    }\n  };\n\n  allGoods = () => this.loadFromServer(getAll);\n\n  fiveAscAlphabeticSortGoods = () => this.loadFromServer(get5First);\n\n  redGoods = () => this.loadFromServer(getRed);\n\n  render() {\n    const { goods, goodsErrorLoading } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"buttons-container\">\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.allGoods}\n          >\n            Load all goods\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.fiveAscAlphabeticSortGoods}\n          >\n            Load 5 goods\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.redGoods}\n          >\n            Load red goods\n          </button>\n        </div>\n        {goodsErrorLoading && <LoadingError />}\n        {goods.length > 0 && <GoodsList goods={goods} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}